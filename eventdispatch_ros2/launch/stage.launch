import os

import launch_ros
from launch import LaunchDescription

from launch.substitutions import (
    LaunchConfiguration,
)

from launch.actions import (
    DeclareLaunchArgument,
)

def generate_launch_description():
    node_name = LaunchConfiguration("node_name")
    events_module_path = LaunchConfiguration("events_module_path")

    return LaunchDescription(
        [
            DeclareLaunchArgument(
                "node_name", default_value="example1", description="node name"
            ),
            DeclareLaunchArgument(
                "events_module_path", default_value="", description="path to events.py module"
            ),
            launch_ros.actions.Node(
                package="eventdispatch_ros2",
                executable="ed_node.py",
                name=node_name,
                output="both", # own_log to only write to file
                emulate_tty=True, # necessary for ed thread to print to stdout
                parameters=[
                    {
                        "events_module_path" : events_module_path
                    }
                ],
                arguments=[
                    "--ros-args",
                    "--log-level",
                    "warn",
                    "--log-file-name",
                    node_name,
                ],
                # prefix=['stdbuf --output=L'],
            ),
        ]
    )
